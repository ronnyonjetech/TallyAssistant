{"ast":null,"code":"var _jsxFileName = \"/home/ron/Desktop/Nexa_technical_challenge/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Questions from \"./Questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const handleSend = async () => {\n    const res = await fetch(\"http://localhost:8000/ask\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        question\n      })\n    });\n    const data = await res.json();\n    setResponse(data.response);\n  };\n  return (\n    /*#__PURE__*/\n    // <div style={{ padding: '2rem' }}>\n    //   <h1>Tally Assistant – Demo</h1>\n    //   <input value={question} onChange={e => setQuestion(e.target.value)} placeholder=\"Ask something...\" />\n    //   <button onClick={handleSend}>Send</button>\n    //   <p><strong>Response:</strong> {response}</p>\n    //   <Questions/>\n    // </div>\n    _jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        padding: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"30%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tally Assistant \\u2013 Demo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            marginBottom: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: question,\n            onChange: e => setQuestion(e.target.value),\n            placeholder: \"Ask something...\",\n            style: {\n              flex: 1,\n              padding: \"0.5rem\",\n              fontSize: \"16px\",\n              border: \"1px solid #ccc\",\n              borderTopLeftRadius: \"4px\",\n              borderBottomLeftRadius: \"4px\",\n              borderRight: \"none\" // remove inner border between input and button\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSend,\n            style: {\n              padding: \"0.5rem 1rem\",\n              fontSize: \"16px\",\n              backgroundColor: \"#00ff1a\",\n              color: \"white\",\n              border: \"1px solid #007bff\",\n              borderTopRightRadius: \"4px\",\n              borderBottomRightRadius: \"4px\",\n              cursor: \"pointer\"\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Response:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), \" \", response]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"70%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Questions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"aZdvDHlMOmD1HtTNC3Lvdq5APV4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Questions","jsxDEV","_jsxDEV","App","_s","question","setQuestion","response","setResponse","handleSend","res","fetch","method","headers","body","JSON","stringify","data","json","style","display","padding","children","width","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","e","target","placeholder","flex","fontSize","border","borderTopLeftRadius","borderBottomLeftRadius","borderRight","onClick","backgroundColor","color","borderTopRightRadius","borderBottomRightRadius","cursor","_c","$RefreshReg$"],"sources":["/home/ron/Desktop/Nexa_technical_challenge/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Questions from \"./Questions\";\nfunction App() {\n  const [question, setQuestion] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n\n  const handleSend = async () => {\n    const res = await fetch(\"http://localhost:8000/ask\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ question }),\n    });\n    const data = await res.json();\n    setResponse(data.response);\n  };\n\n  return (\n    // <div style={{ padding: '2rem' }}>\n    //   <h1>Tally Assistant – Demo</h1>\n    //   <input value={question} onChange={e => setQuestion(e.target.value)} placeholder=\"Ask something...\" />\n    //   <button onClick={handleSend}>Send</button>\n    //   <p><strong>Response:</strong> {response}</p>\n    //   <Questions/>\n    // </div>\n\n    <div style={{ display: \"flex\", padding: \"2rem\" }}>\n      {/* Left side: smaller width (e.g., 30%) */}\n      <div style={{ width: \"30%\" }}>\n        {/* <h1>Tally Assistant – Demo</h1>\n        <input\n          value={question}\n          onChange={(e) => setQuestion(e.target.value)}\n          placeholder=\"Ask something...\"\n          style={{ width: \"100%\", marginBottom: \"1rem\" }}\n        />\n        <button onClick={handleSend}>Send</button>\n        <p>\n          <strong>Response:</strong> {response}\n        </p> */}\n        <h1>Tally Assistant – Demo</h1>\n\n        <div style={{ display: \"flex\", marginBottom: \"1rem\" }}>\n          <input\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n            placeholder=\"Ask something...\"\n            style={{\n              flex: 1,\n              padding: \"0.5rem\",\n              fontSize: \"16px\",\n              border: \"1px solid #ccc\",\n              borderTopLeftRadius: \"4px\",\n              borderBottomLeftRadius: \"4px\",\n              borderRight: \"none\", // remove inner border between input and button\n            }}\n          />\n          <button\n            onClick={handleSend}\n            style={{\n              padding: \"0.5rem 1rem\",\n              fontSize: \"16px\",\n              backgroundColor: \"#00ff1a\",\n              color: \"white\",\n              border: \"1px solid #007bff\",\n              borderTopRightRadius: \"4px\",\n              borderBottomRightRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Send\n          </button>\n        </div>\n\n        <p>\n          <strong>Response:</strong> {response}\n        </p>\n      </div>\n\n      {/* Right side: larger width (e.g., 70%) */}\n      <div style={{ width: \"70%\" }}>\n        <Questions />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}