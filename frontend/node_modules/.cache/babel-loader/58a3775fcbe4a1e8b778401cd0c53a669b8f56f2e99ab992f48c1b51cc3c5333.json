{"ast":null,"code":"var _jsxFileName = \"/home/ron/Desktop/TallyAssistant/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import Questions from \"./Questions\";\n\n// function App() {\n//   const [question, setQuestion] = useState(\"\");\n//   const [response, setResponse] = useState(\"\");\n//   const [refreshCount, setRefreshCount] = useState(0); // <--- added\n\n//   const handleSend = async () => {\n//     const res = await fetch(\"http://localhost:8000/ask\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ question }),\n//     });\n//     const data = await res.json();\n//     setResponse(data.response);\n//     setQuestion(\"\"); // optional: clear input\n//     setRefreshCount((prev) => prev + 1); // trigger refresh of Questions\n//   };\n\n//   return (\n//     <div style={{ display: \"flex\", padding: \"2rem\" }}>\n//       <div style={{ width: \"30%\" }}>\n//         <h1>Tally Assistant – Demo</h1>\n\n//         <div style={{ display: \"flex\", marginBottom: \"1rem\" }}>\n//           <input\n//             value={question}\n//             onChange={(e) => setQuestion(e.target.value)}\n//             placeholder=\"Ask something...\"\n//             style={{\n//               flex: 1,\n//               padding: \"0.5rem\",\n//               fontSize: \"16px\",\n//               border: \"1px solid #ccc\",\n//               borderTopLeftRadius: \"4px\",\n//               borderBottomLeftRadius: \"4px\",\n//               borderRight: \"none\",\n//             }}\n//           />\n//           <button\n//             onClick={handleSend}\n//             style={{\n//               padding: \"0.5rem 1rem\",\n//               fontSize: \"16px\",\n//               backgroundColor: \"#00ff1a\",\n//               color: \"white\",\n//               border: \"1px solid #00ff1a\",\n//               borderTopRightRadius: \"4px\",\n//               borderBottomRightRadius: \"4px\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Send\n//           </button>\n//         </div>\n\n//         {response && (\n//           <p>\n//             <strong>Response:</strong> {response}\n//           </p>\n//         )}\n//       </div>\n\n//       <div style={{ width: \"70%\" }}>\n//         <Questions refreshTrigger={refreshCount} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport Questions from \"./Questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [refreshCount, setRefreshCount] = useState(0);\n  const [loading, setLoading] = useState(false); // <-- loading state\n  const [error, setError] = useState(\"\"); // <-- error state\n\n  const handleSend = async () => {\n    // Reset previous states\n    setResponse(\"\");\n    setError(\"\");\n\n    // Check if input is empty\n    if (question.trim() === \"\") {\n      setError(\"Please enter a question before sending.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch(\"http://localhost:8000/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question\n        })\n      });\n      const data = await res.json();\n      setResponse(data.response);\n      setRefreshCount(prev => prev + 1);\n      setQuestion(\"\"); // clear input\n    } catch (err) {\n      setError(\"Something went wrong. Please try again.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"30%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tally Assistant \\u2013 Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          placeholder: \"Ask something...\",\n          style: {\n            flex: 1,\n            padding: \"0.5rem\",\n            fontSize: \"16px\",\n            border: \"1px solid #ccc\",\n            borderTopLeftRadius: \"4px\",\n            borderBottomLeftRadius: \"4px\",\n            borderRight: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          style: {\n            padding: \"0.5rem 1rem\",\n            fontSize: \"16px\",\n            backgroundColor: \"#00ff1a\",\n            color: \"white\",\n            border: \"1px solid #00ff1a\",\n            borderTopRightRadius: \"4px\",\n            borderBottomRightRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          marginBottom: \"0.5rem\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#888\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Thinking...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), !loading && response && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), \" \", response]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"70%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Questions, {\n        refreshTrigger: refreshCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LfdEL7w2id7+6w0806qTP9s387o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Questions","jsxDEV","_jsxDEV","App","_s","question","setQuestion","response","setResponse","refreshCount","setRefreshCount","loading","setLoading","error","setError","handleSend","trim","res","fetch","method","headers","body","JSON","stringify","data","json","prev","err","style","display","padding","children","width","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","e","target","placeholder","flex","fontSize","border","borderTopLeftRadius","borderBottomLeftRadius","borderRight","onClick","backgroundColor","color","borderTopRightRadius","borderBottomRightRadius","cursor","refreshTrigger","_c","$RefreshReg$"],"sources":["/home/ron/Desktop/TallyAssistant/frontend/src/App.js"],"sourcesContent":["\n// import React, { useState } from \"react\";\n// import Questions from \"./Questions\";\n\n// function App() {\n//   const [question, setQuestion] = useState(\"\");\n//   const [response, setResponse] = useState(\"\");\n//   const [refreshCount, setRefreshCount] = useState(0); // <--- added\n\n//   const handleSend = async () => {\n//     const res = await fetch(\"http://localhost:8000/ask\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ question }),\n//     });\n//     const data = await res.json();\n//     setResponse(data.response);\n//     setQuestion(\"\"); // optional: clear input\n//     setRefreshCount((prev) => prev + 1); // trigger refresh of Questions\n//   };\n\n//   return (\n//     <div style={{ display: \"flex\", padding: \"2rem\" }}>\n//       <div style={{ width: \"30%\" }}>\n//         <h1>Tally Assistant – Demo</h1>\n\n//         <div style={{ display: \"flex\", marginBottom: \"1rem\" }}>\n//           <input\n//             value={question}\n//             onChange={(e) => setQuestion(e.target.value)}\n//             placeholder=\"Ask something...\"\n//             style={{\n//               flex: 1,\n//               padding: \"0.5rem\",\n//               fontSize: \"16px\",\n//               border: \"1px solid #ccc\",\n//               borderTopLeftRadius: \"4px\",\n//               borderBottomLeftRadius: \"4px\",\n//               borderRight: \"none\",\n//             }}\n//           />\n//           <button\n//             onClick={handleSend}\n//             style={{\n//               padding: \"0.5rem 1rem\",\n//               fontSize: \"16px\",\n//               backgroundColor: \"#00ff1a\",\n//               color: \"white\",\n//               border: \"1px solid #00ff1a\",\n//               borderTopRightRadius: \"4px\",\n//               borderBottomRightRadius: \"4px\",\n//               cursor: \"pointer\",\n//             }}\n//           >\n//             Send\n//           </button>\n//         </div>\n\n        \n//         {response && (\n//           <p>\n//             <strong>Response:</strong> {response}\n//           </p>\n//         )}\n//       </div>\n\n//       <div style={{ width: \"70%\" }}>\n//         <Questions refreshTrigger={refreshCount} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState } from \"react\";\nimport Questions from \"./Questions\";\n\nfunction App() {\n  const [question, setQuestion] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [refreshCount, setRefreshCount] = useState(0);\n  const [loading, setLoading] = useState(false); // <-- loading state\n  const [error, setError] = useState(\"\");        // <-- error state\n\n  const handleSend = async () => {\n    // Reset previous states\n    setResponse(\"\");\n    setError(\"\");\n\n    // Check if input is empty\n    if (question.trim() === \"\") {\n      setError(\"Please enter a question before sending.\");\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const res = await fetch(\"http://localhost:8000/ask\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ question }),\n      });\n\n      const data = await res.json();\n      setResponse(data.response);\n      setRefreshCount((prev) => prev + 1);\n      setQuestion(\"\"); // clear input\n    } catch (err) {\n      setError(\"Something went wrong. Please try again.\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div style={{ display: \"flex\", padding: \"2rem\" }}>\n      <div style={{ width: \"30%\" }}>\n        <h1>Tally Assistant – Demo</h1>\n\n        <div style={{ display: \"flex\", marginBottom: \"1rem\" }}>\n          <input\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n            placeholder=\"Ask something...\"\n            style={{\n              flex: 1,\n              padding: \"0.5rem\",\n              fontSize: \"16px\",\n              border: \"1px solid #ccc\",\n              borderTopLeftRadius: \"4px\",\n              borderBottomLeftRadius: \"4px\",\n              borderRight: \"none\",\n            }}\n          />\n          <button\n            onClick={handleSend}\n            style={{\n              padding: \"0.5rem 1rem\",\n              fontSize: \"16px\",\n              backgroundColor: \"#00ff1a\",\n              color: \"white\",\n              border: \"1px solid #00ff1a\",\n              borderTopRightRadius: \"4px\",\n              borderBottomRightRadius: \"4px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Send\n          </button>\n        </div>\n\n        {/* Error message */}\n        {error && (\n          <p style={{ color: \"red\", marginBottom: \"0.5rem\" }}>{error}</p>\n        )}\n\n        {/* Loading text */}\n        {loading && (\n          <p style={{ color: \"#888\" }}>\n            <strong>Thinking...</strong>\n          </p>\n        )}\n\n        {/* Response message */}\n        {!loading && response && (\n          <p>\n            <strong>Response:</strong> {response}\n          </p>\n        )}\n      </div>\n\n      <div style={{ width: \"70%\" }}>\n        <Questions refreshTrigger={refreshCount} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}