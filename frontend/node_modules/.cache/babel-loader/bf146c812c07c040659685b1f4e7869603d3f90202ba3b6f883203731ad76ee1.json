{"ast":null,"code":"var _jsxFileName = \"/home/ron/Desktop/Nexa_technical_challenge/frontend/src/Questions.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import './Questions.css';\n\n// function Questions() {\n//   const [answers, setAnswers] = useState([]);\n\n//   useEffect(() => {\n//     async function fetchAnswers() {\n//       try {\n//         const res = await fetch('http://localhost:8000/answers');\n//         const data = await res.json();\n//         const sorted = data.sort(\n//           (a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\n//         );\n//         setAnswers(sorted);\n//       } catch (error) {\n//         console.error('Error fetching answers:', error);\n//       }\n//     }\n\n//     fetchAnswers();\n//   }, []);\n\n//   const handleDelete = async (_id) => {\n//     const confirmDelete = window.confirm(\"Are you sure you want to delete this entry?\");\n//     if (!confirmDelete) return;\n\n//     try {\n//       const res = await fetch(`http://localhost:8000/delete/${_id}`, {\n//         method: 'DELETE',\n//       });\n\n//       if (res.ok) {\n//         // Remove item from local state\n//         setAnswers((prev) => prev.filter((item) => item._id !== _id));\n//       } else {\n//         console.error('Failed to delete item');\n//       }\n//     } catch (error) {\n//       console.error('Error deleting item:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"questions-container\">\n//       <h2 className=\"questions-heading\">Recent Questions</h2>\n//       {answers.length === 0 ? (\n//         <p className=\"loading-text\">Loading or no questions available...</p>\n//       ) : (\n//         answers.map((item) => (\n//           <div key={item._id} className=\"question-card\">\n//             <h3 className=\"question-title\">{item.question}</h3>\n//             <p className=\"question-answer\">{item.answer}</p>\n//             <div className=\"question-footer\">\n//               <span className=\"question-time\">\n//                 {new Date(item.timestamp).toLocaleString()}\n//               </span>\n\n//               <button\n//   className=\"delete-button\"\n//   onClick={() => handleDelete(item._id)}\n//   title=\"Delete\"\n// >\n//   <i className=\"fas fa-trash-alt\"></i>\n// </button>\n//             </div>\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Questions;\n\nimport React, { useEffect, useState } from 'react';\nimport './Questions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Questions({\n  refreshTrigger\n}) {\n  _s();\n  const [answers, setAnswers] = useState([]);\n  useEffect(() => {\n    async function fetchAnswers() {\n      try {\n        const res = await fetch('http://localhost:8000/answers');\n        const data = await res.json();\n        const sorted = data.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        setAnswers(sorted);\n      } catch (error) {\n        console.error('Error fetching answers:', error);\n      }\n    }\n    fetchAnswers();\n  }, [refreshTrigger]); // <--- this will re-fetch when trigger changes\n\n  const handleDelete = async _id => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this entry?\");\n    if (!confirmDelete) return;\n    try {\n      const res = await fetch(`http://localhost:8000/delete/${_id}`, {\n        method: 'DELETE'\n      });\n      if (res.ok) {\n        setAnswers(prev => prev.filter(item => item._id !== _id));\n      }\n    } catch (error) {\n      console.error('Error deleting item:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"questions-heading\",\n      children: \"Recent Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), answers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"Loading or no questions available...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this) : answers.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question-title\",\n        children: item.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-answer\",\n        children: item.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-time\",\n        children: new Date(item.timestamp).toLocaleString('en-KE', {\n          timeZone: 'Africa/Nairobi',\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: true // optional: use 12hr format with AM/PM\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: () => handleDelete(item._id),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-trash-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)]\n    }, item._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(Questions, \"dxes/kRl333RWxkLpEqHu4XKyWs=\");\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Questions","refreshTrigger","_s","answers","setAnswers","fetchAnswers","res","fetch","data","json","sorted","sort","a","b","Date","timestamp","getTime","error","console","handleDelete","_id","confirmDelete","window","confirm","method","ok","prev","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","question","answer","toLocaleString","timeZone","year","month","day","hour","minute","second","hour12","onClick","_c","$RefreshReg$"],"sources":["/home/ron/Desktop/Nexa_technical_challenge/frontend/src/Questions.js"],"sourcesContent":["\n\n\n// import React, { useEffect, useState } from 'react';\n// import './Questions.css';\n\n// function Questions() {\n//   const [answers, setAnswers] = useState([]);\n\n//   useEffect(() => {\n//     async function fetchAnswers() {\n//       try {\n//         const res = await fetch('http://localhost:8000/answers');\n//         const data = await res.json();\n//         const sorted = data.sort(\n//           (a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\n//         );\n//         setAnswers(sorted);\n//       } catch (error) {\n//         console.error('Error fetching answers:', error);\n//       }\n//     }\n\n//     fetchAnswers();\n//   }, []);\n\n//   const handleDelete = async (_id) => {\n//     const confirmDelete = window.confirm(\"Are you sure you want to delete this entry?\");\n//     if (!confirmDelete) return;\n\n//     try {\n//       const res = await fetch(`http://localhost:8000/delete/${_id}`, {\n//         method: 'DELETE',\n//       });\n\n//       if (res.ok) {\n//         // Remove item from local state\n//         setAnswers((prev) => prev.filter((item) => item._id !== _id));\n//       } else {\n//         console.error('Failed to delete item');\n//       }\n//     } catch (error) {\n//       console.error('Error deleting item:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"questions-container\">\n//       <h2 className=\"questions-heading\">Recent Questions</h2>\n//       {answers.length === 0 ? (\n//         <p className=\"loading-text\">Loading or no questions available...</p>\n//       ) : (\n//         answers.map((item) => (\n//           <div key={item._id} className=\"question-card\">\n//             <h3 className=\"question-title\">{item.question}</h3>\n//             <p className=\"question-answer\">{item.answer}</p>\n//             <div className=\"question-footer\">\n//               <span className=\"question-time\">\n//                 {new Date(item.timestamp).toLocaleString()}\n//               </span>\n             \n//               <button\n//   className=\"delete-button\"\n//   onClick={() => handleDelete(item._id)}\n//   title=\"Delete\"\n// >\n//   <i className=\"fas fa-trash-alt\"></i>\n// </button>\n//             </div>\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Questions;\n\n\nimport React, { useEffect, useState } from 'react';\nimport './Questions.css';\n\nfunction Questions({ refreshTrigger }) {\n  const [answers, setAnswers] = useState([]);\n\n  useEffect(() => {\n    async function fetchAnswers() {\n      try {\n        const res = await fetch('http://localhost:8000/answers');\n        const data = await res.json();\n        const sorted = data.sort(\n          (a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\n        );\n        setAnswers(sorted);\n      } catch (error) {\n        console.error('Error fetching answers:', error);\n      }\n    }\n\n    fetchAnswers();\n  }, [refreshTrigger]); // <--- this will re-fetch when trigger changes\n\n  const handleDelete = async (_id) => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this entry?\");\n    if (!confirmDelete) return;\n\n    try {\n      const res = await fetch(`http://localhost:8000/delete/${_id}`, {\n        method: 'DELETE',\n      });\n\n      if (res.ok) {\n        setAnswers(prev => prev.filter(item => item._id !== _id));\n      }\n    } catch (error) {\n      console.error('Error deleting item:', error);\n    }\n  };\n\n  return (\n    <div className=\"questions-container\">\n      <h2 className=\"questions-heading\">Recent Questions</h2>\n      {answers.length === 0 ? (\n        <p className=\"loading-text\">Loading or no questions available...</p>\n      ) : (\n        answers.map((item) => (\n          <div key={item._id} className=\"question-card\">\n            <h3 className=\"question-title\">{item.question}</h3>\n            <p className=\"question-answer\">{item.answer}</p>\n            {/* <div className=\"question-time\">{new Date(item.timestamp).toLocaleString()}</div> */}\n            <div className=\"question-time\">\n  {new Date(item.timestamp).toLocaleString('en-KE', {\n    timeZone: 'Africa/Nairobi',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: true // optional: use 12hr format with AM/PM\n  })}\n</div>\n\n            <button className=\"delete-button\" onClick={() => handleDelete(item._id)}>\n              <i className=\"fas fa-trash-alt\"></i>\n            </button>\n          </div>\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default Questions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}